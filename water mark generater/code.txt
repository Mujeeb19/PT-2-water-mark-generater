import os

import boto3
import datetime as dt
from tkinter import *
from tkinter import messagebox
from tkinter.filedialog import askopenfilename
from tkinter.messagebox import showinfo

import cv2
from PIL import ImageTk, Image

app = Tk()
app.title('PT-1 Project')
app.geometry('700x438')
app.iconbitmap('icon.ico')
img = ImageTk.PhotoImage(Image.open('My project.jpg'))
lbl_bgi = Label(app, image=img)
lbl_bgi.pack()


# ==========================================Functions===========================================================
def dup():
    def my_func():
        global my_dir
        my_dir = askopenfilename()

    my_func()


def dup_1():
    def my_func_1():
        global my_dir_1
        my_dir_1 = askopenfilename()

    my_func_1()


def auto_exit():
    app.destroy()


#                             ================Start Button=================

def start():
    if my_dir == '' and my_dir_1 != '':
        showinfo("Message", "please Select Image")
    elif (my_dir_1 == '' and my_dir != ''):
        showinfo("Message", 'Please select Watermark')
    elif (my_dir_1 == '' and my_dir == ''):
        showinfo("Message", 'Please select Image and Watermark to continue..')
    else:
        read_bg_img = cv2.imread(my_dir, 1)
        background_img = cv2.resize(read_bg_img, (600, 600))
        h_img, w_img, _ = background_img.shape

        # Reading and resizing the background logo...
        read_logo = cv2.imread(my_dir_1, 1)
        logo = cv2.resize(read_logo, (300, 100))
        h_logo, w_logo, _ = logo.shape

        # ====================================Locating Center of the Image================================================
        center_y = int(h_img / 2)
        center_x = int(w_img / 2)
        top_y = center_y - int(h_logo / 2)
        left_x = center_x - int(w_logo / 2)
        bottom_y = top_y + h_logo
        right_x = left_x + w_logo

        roi = background_img[top_y:bottom_y, left_x:right_x]

        result = cv2.addWeighted(roi, 1, logo, 0.5, 0)
        background_img[top_y:bottom_y, left_x:right_x] = result

        current_dt = dt.datetime.now().strftime('%d-%m-%Y %I-%M-%S')
        # this line is used to the img name in the format of date and time.
        file_name = current_dt + '.jpg'
        cv2.imwrite(file_name, background_img)
        print(file_name)
        auto_exit()

        resource = boto3.client('s3')
        resource.upload_file(
            Filename=file_name,
            Bucket='bucket-for-pt1',
            Key='pic_1.jpg'
        )
        showinfo("Message", 'Image has been uploaded to S3(Simple Storage Service')
        os.remove(file_name)


# ========================================Global Variables========================================================

my_dir = a = ''
my_dir_1 = b = ''

# ===============================================Buttons===========================================================
img_btn = Button(app, height=1, width=11, font='Helvetica 12 bold', text='Select Image', command=dup,
                 borderwidth=5)
img_btn.place(x=110, y=110)

logo_btn = Button(app, height=1, width=13, font='Helvetica 12 bold', text='Select Watermark', command=dup_1,
                  borderwidth=5)
logo_btn.place(x=100, y=220)

start_1 = Button(app, text='Continue', width=11, height=1, font='Helvetica 13 bold',
                 borderwidth=6, bg='blue', fg='white', command=start)
start_1.place(x=110, y=320)


# =========================================Extra Functions=======================================================
def about():
    help_page = Tk()
    help_page.title('About')
    help_page.geometry('550x400')
    help_page.iconbitmap('icon.ico')

    about_lbl = Label(help_page, font='Helvetica 12 italic', text='Select Image : Here u have to select the Image',
                      bg='orange')
    about_lbl.place(x=50, y=20)

    about_lbl_1 = Label(help_page, font='Helvetica 12 italic',
                        text='Select Watermark : Here u have to select the Watermark', fg='white', bg='blue')
    about_lbl_1.place(x=50, y=70)

    about_lbl_2 = Label(help_page, font='Helvetica 12 italic',
                        text='Continue : After selecting two Images click continue to save', bg='green')
    about_lbl_2.place(x=50, y=120)

    about_lbl_3 = Label(help_page, font='Helvetica 12 italic',
                        text='the Watermarked Image to S3(AWS Simple Storage Service..', bg='green')
    about_lbl_3.place(x=50, y=140)

    about_lbl_4 = Label(help_page, text='All rights reserved', fg='white', bg='red', font='Helvetica 9 bold')
    about_lbl_4.place(x=180, y=250)

    about_lbl_5 = Label(help_page, text='@back_bencher', fg='white', bg='red', font='Helvetica 11 bold')
    about_lbl_5.place(x=230, y=275)

    # Function for Back Button
    def back():
        help_page.destroy()

    about_btn = Button(help_page, text='Back', font='Helvetica 11 bold', fg='black',
                       bg='yellow', borderwidth=3, command=back)
    about_btn.place(x=430, y=330)

    help_page.mainloop()


def exit():
    result = messagebox.askquestion("Exit", "Are You Sure You Want to Exit?")
    if result == "yes":
        app.destroy()
    else:
        return None


# =========================================Extra Buttons==========================================================

help = Button(app, text='About', font='Helvetica 11 bold', fg='red', borderwidth=3, command=about)
help.place(x=470, y=385)

exit = Button(app, text='Exit', font='Helvetica 11 bold', fg='red', borderwidth=3, command=exit)
exit.place(x=580, y=385)

app.mainloop()
